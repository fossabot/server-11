syntax = "proto3";

package odroe.socfony;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

///-----------------------------------------------------------------------------
/// VerificationCodeMutatuion - Send a verification code to the user's phone
///-----------------------------------------------------------------------------
service VerificationCodeMutation {
  // Send a verification code to the user's phone
  rpc Send(google.protobuf.StringValue) returns (google.protobuf.Empty);
}

///-----------------------------------------------------------------------------
/// AccessTokenMutation - Access token muatation
///-----------------------------------------------------------------------------
service AccessTokenMutation {
  // Create a new access token
  // The phone if don't registered, The phone will be register a new user.
  rpc Create(CreateAccessTokenRequest) returns (AccessTokenEntity);

  // Delete an access token
  rpc Delete(google.protobuf.Empty) returns (google.protobuf.Empty);

  // Refresh an access token
  rpc Refresh(google.protobuf.Empty) returns (AccessTokenEntity);
}

// CreateAccessTokenRequest - Request to create an access token
message CreateAccessTokenRequest {
  // The user's phone number
  string phone = 1;

  // The user's verification code
  string code = 2;
}

// AccessTokenEntity - Access token entity
message AccessTokenEntity {
  // The access token
  string token = 1;

  // The access token owner user id
  string user_id = 2;

  // The access token expired at
  google.protobuf.Timestamp expired_at = 3;

  // The access token refresh expired at
  google.protobuf.Timestamp refresh_expired_at = 4;
}

//-----------------------------------------------------------------------------
// User Query/Mutation - User query and mutation services
//-----------------------------------------------------------------------------

// UserQuery - User query service
service UserQuery {
  // find one user
  rpc FindOne(UserFindOneRequest) returns (UserEntity);

  // find many users
  rpc FindMany(UserFindManyRequest) returns (UserEntityList);

  // Search users
  rpc Search(UserSearchRequest) returns (UserEntityList);
}

// UserMutation - User mutation service
service UserMutation {
  // Update user phone number
  rpc UpdatePhone(UserUpdatePhoneRequest) returns (UserEntity);

  // Update user name.
  rpc UpdateName(google.protobuf.StringValue) returns (UserEntity);

  // Update User avatar
  rpc UpdateAvatar(google.protobuf.StringValue) returns (google.protobuf.Empty);
}

// UserUpdatePhoneRequest - Request to update user phone number
message UserUpdatePhoneRequest {
  // new phone number
  string phone = 1;

  // new phone code
  string code = 2;

  // old phone code
  optional string old_phone_code = 3;
}

// UserFindOneRequest - Find one user request
message UserFindOneRequest {
  oneof kind {
    // User ID
    string id = 1;

    // User phone number
    string phone = 2;

    // User name
    string name = 3;
  }
}

// UserFindManyRequest - Find many user request
message UserFindManyRequest {
  repeated UserFindOneRequest conditions = 1;
}

// UserSearchRequest - Search user request
message UserSearchRequest {
  // The search keyword
  string keyword = 1;

  // The search offset, default is 0
  optional int32 offset = 2;

  // The search limit, default is 15
  optional int32 limit = 3;
}

// UserEntity - User entity
message UserEntity {
  // User ID
  string id = 1;

  // User phone number
  optional string phone = 2;

  // User name
  optional string name = 3;

  // User registed at
  google.protobuf.Timestamp created_at = 4;
}

// UserEntityList - User entity list
message UserEntityList {
  // The user entity list
  repeated UserEntity users = 1;
}

//-----------------------------------------------------------------------------
// User profile Query/Mutation - User profile query and mutation services
//-----------------------------------------------------------------------------

// UserProfileQuery - User profile query service
service UserProfileQuery {
  rpc Find(google.protobuf.StringValue) returns (UserProfileEntity);
}

// UserProfileMutation - User profile mutation service
service UserProfileMutation {
  // Update user profile
  rpc Update(UserProfileUpdateRequest) returns (UserProfileEntity);
}

// UserProfileUpdateRequest - Request to update user profile
message UserProfileUpdateRequest {
  // User avatar
  optional string avatar = 1;

  // User name.
  optional string name = 2;

  // User bio
  optional string bio = 3;

  // User birthday
  optional int32 birthday = 4;

  // User gender
  optional UserProfileEntity.Gender gender = 5;
}

// UserProfileEntity - User profile entity
message UserProfileEntity {
  enum Gender {
    woman   = 0;
    man     = 1;
    unknown = 2;
  }

  // User ID
  string id = 1;

  // User name
  optional string name = 2;

  // User avatar
  optional string avatar = 3;

  // User bio
  optional string bio = 4;

  // User birthday
  optional int32 birthday = 5;

  // User gender
  optional Gender gender = 6;
}

//-----------------------------------------------------------------------------
// Storage
//-----------------------------------------------------------------------------
service StorageMutation {
  rpc Create(CreateStorageLinkRequest) returns (google.protobuf.StringValue);
}

service StorageQuery {
  rpc Get(GetStorageLinkRequest) returns (google.protobuf.StringValue);
}

enum StorageImageType {
  jpeg = 0;
  png = 1;
  gif = 2;
  webp = 3;
}

enum StorageVideoType {
  mp4 = 0;
  webm = 1;
}

enum StorageAudioType {
  mp3 = 0;
  wav = 1;
}

message CreateStorageLinkRequest {
  oneof type {
    StorageImageType image = 1;
    StorageVideoType video = 2;
    StorageAudioType audio = 3;
  }

  string md5 = 4;
  int32 length = 5;
}

message GetStorageLinkRequest {
  string key = 1;
  optional string query = 2;
}
