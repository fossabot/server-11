generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Configuration {
  key   String @id @db.VarChar(199)
  value Json
}

model VerificationCode {
  id        String   @id @db.Char(64)
  phone     String   @db.VarChar(199)
  code      String   @db.VarChar(50)
  createdAt DateTime @default(now())
  expiredAt DateTime

  @@unique([phone, code])
  @@index([createdAt])
  @@index([expiredAt])
  @@index([phone])
}

model AccessToken {
  userId           String   @db.Char(64)
  createdAt        DateTime @default(now())
  expiredAt        DateTime
  refreshExpiredAt DateTime
  token            String   @id @db.Char(128)
  User             User     @relation(fields: [userId], references: [id])

  @@index([createdAt])
  @@index([expiredAt])
  @@index([refreshExpiredAt])
  @@index([userId])
}

model User {
  id               String             @id @db.Char(64)
  name             String?            @unique @db.VarChar(199)
  phone            String?            @unique @db.VarChar(199)
  createdAt        DateTime           @default(now())
  AccessToken      AccessToken[]
  Moment           Moment[]
  UserLikeOnMoment UserLikeOnMoment[]
  UserProfile      UserProfile?
  UserStarOnMoment UserStarOnMoment[]
  Comment          Comment[]

  UserCommentOnMoment UserCommentOnMoment[]
  @@index([createdAt])
}

model UserProfile {
  userId   String             @id @db.Char(64)
  avatar   String?            @db.VarChar(199)
  name     String?            @db.VarChar(100)
  bio      String?            @db.Text
  birthday Int?
  gender   UserProfile_gender @default(unknown)
  User     User               @relation(fields: [userId], references: [id])

  @@index([birthday])
  @@index([gender])
  @@index([name])
}

model Moment {
  id               String             @id @db.Char(64)
  userId           String             @db.Char(64)
  title            String?            @db.VarChar(199)
  body             String?            @db.Text
  media            Json?
  User             User               @relation(fields: [userId], references: [id])
  UserLikeOnMoment UserLikeOnMoment[]
  UserStarOnMoment UserStarOnMoment[]
  UserCommentOnMoment UserCommentOnMoment[]
  
  @@index([userId])
}

model UserLikeOnMoment {
  userId    String   @db.Char(64)
  momentId  String   @db.Char(64)
  createdAt DateTime @default(now())
  Moment    Moment   @relation(fields: [momentId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@id([userId, momentId])
  @@index([createdAt])
  @@index([momentId])
  @@index([userId])
}

model UserStarOnMoment {
  userId    String   @db.Char(64)
  momentId  String   @db.Char(64)
  createdAt DateTime @default(now())
  Moment    Moment   @relation(fields: [momentId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@id([userId, momentId])
  @@index([createdAt])
  @@index([momentId])
  @@index([userId])
}

model Comment {
  id        String   @id @db.Char(64)
  body      String   @db.Text
  userId    String   @db.Char(64)
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
}

model UserCommentOnMoment {
  userId    String   @db.Char(64)
  momentId  String   @db.Char(64)
  createdAt DateTime @default(now())
  Moment    Moment   @relation(fields: [momentId], references: [id])
  User      User     @relation(fields: [userId], references: [id])

  @@id([userId, momentId])
  @@index([createdAt])
  @@index([momentId])
  @@index([userId])
}

enum UserProfile_gender {
  woman
  man
  unknown
}
